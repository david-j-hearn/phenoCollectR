t = c(1,2,3,4,5)
tr = c(5,4,3,2,1)
sum(t > tr-1)
tr-1
t
sum(t > 1-tr)
1-tr
install.packages("shinystan")
library(shinystan)
chain1 <- cbind(beta1 = rnorm(100), beta2 = rnorm(100), sigma = rexp(100))
chain2 <- cbind(beta1 = rnorm(100), beta2 = rnorm(100), sigma = rexp(100))
sso <- as.shinystan(list(chain1, chain2))
launch_shinystan(sso)
install.packages("devtools")
devtools::install_github("david-j-hearn/phenoCollectR")
devtools::install_github("david-j-hearn/phenoCollectR")
devtools::install_github("david-j-hearn/phenoCollectR")
devtools::install_github("david-j-hearn/phenoCollectR")
devtools::install_github("david-j-hearn/phenoCollectR")
devtools::install_github("david-j-hearn/phenoCollectR")
library(phenoCollectR)
rC(n = 1000, mu_O=100, sigma_O=10,mu_D = 50)
hist(rC(n = 1000, mu_O=100, sigma_O=10,mu_D = 50))
hist(rT(n = 1000, mu_O=100, sigma_O=10,mu_D = 50))
hist(rT(n = 1000, mu_O=100, sigma_O=10,mu_D = 100))
hist(rT(n = 1000, mu_O=100, sigma_O=50,mu_D = 100))
hist(rCkN(n = 1000, mu_O=100, sigma_O=50,mu_D = 100))
hist(rCkN(n = 1000, N=1000, mu_O=100, sigma_O=50,mu_D = 100))
ls()
hist(rCkN(n = 1000, N=1000, mu_O=100, sigma_O=50,mu_D = 100, type="BB"))
hist(rCkN(n = 1000, N=1000, mu_O=100, sigma_O=50,mu_D = 100, sigma_D=20, type="BB"))
x = seq(250,365,1)
hist(rCkN(n = 1000, N=1000, mu_O=100, sigma_O=50,mu_D = 100, sigma_D=20, type="BB"), probability=T)
points(x, dCkN(x, N=1000, mu_O=100, sigma_O=50 mu_D=100, sigma_D=20, type="BB"), type='l')
points(x, dCkN(x, N=1000, mu_O=100, sigma_O=50, mu_D=100, sigma_D=20, type="BB"), type='l')
hist(rT(n = 1000, mu_O=100, sigma_O=50,mu_D = 100, sigma_D=20, type="BB"), probability=T)
points(x,dT(x, mu_O=100, sigma_O=50,mu_D = 100, sigma_D=20, type="BB"), tyepe='l')
points(x,dT(x, mu_O=100, sigma_O=50,mu_D = 100, sigma_D=20, type="BB"), type='l')
points(x,dT(x, mu_O=100, sigma_O=50,mu_D = 100, sigma_D=20, type="BB"), type='l')
hist(rT(n = 1000, mu_O=100, sigma_O=50,mu_D = 100, sigma_D=20, type="BB"), probability=T)
points(x,dT(x, mu_O=100, sigma_O=50,mu_D = 100, sigma_D=20, type="BB"), type='l')
x=seq(0,350,1)
points(x,dT(x, mu_O=100, sigma_O=50,mu_D = 100, sigma_D=20, type="BB"), type='l')
hist(rT(n = 1000, mu_O=100, sigma_O=50,mu_D = 100, sigma_D=20, type="GP"), probability=T)
points(x,dT(x, mu_O=100, sigma_O=50,mu_D = 100, sigma_D=20, type="GP"), type='l')
devtools::install_github("david-j-hearn/phenoCollectR")
library(phenoCollectR)
library(phenoCollectR)
system.file("data", "Mertensia_virginica.Full.txt", package="phenoCollectR")
file =system.file("data", "Mertensia_virginica.Full.txt", package="phenoCollectR")
data = read.table(file, header=T, sep='\t')
data = phenoCollectR::preparePhenologyData(dataFile=file, responseVariableName = "DOY", onsetCovariateNames = c("Year", "Latitude"), durationCovariateNames = c("Year", "Latitude"), removeOutliers=TRUE)
data(package="phenoCollectR")
data("Anemone_quinquefolia.Full")
View(Anemone_quinquefolia.Full)
View(Anemone_quinquefolia.Full)
plot(Anemone_quinquefolia.Full$Latitude, Anemone_quinquefolia.Full$Year)
data = phenoCollectR::preparePhenologyData(dataFile=Anemone_quinquefolia.Full, responseVariableName = "DOY", onsetCovariateNames = c("Year", "Latitude"), durationCovariateNames = c("Year", "Latitude"), removeOutliers=TRUE)
data = phenoCollectR::preparePhenologyData(dataFile=file, responseVariableName = "DOY", onsetCovariateNames = c("Year", "Latitude"), durationCovariateNames = c("Year", "Latitude"), removeOutliers=TRUE)
data
runStandardLinearModel(responseData = data$responseData, onsetCovariateData = data$onsetCovariateData, durationCovariateData = data$durationCovariateData)
runStanPhenology(type = "full", responseData = data$responseData, onsetCovariateData = data$onsetCovariateData, durationCovariateData = data$durationCovariateData)
stanResult = runStanPhenology(type = "full", responseData = data$responseData, onsetCovariateData = data$onsetCovariateData, durationCovariateData = data$durationCovariateData)
stanResult
phenoCollectR::summarizePhenologyResults(stanRunResult = stanResult, taxonName="Anemone")
phenoCollectR::summarizePhenologyResults(stanRunResult = stanResult, taxonName="Anemone", standardLinearModel = T)
stan.sum = phenoCollectR::summarizePhenologyResults(stanRunResult = stanResult, taxonName="Anemone", standardLinearModel = T)
stan.sum$taxon.name
stan.sum$standard.linear.model
phenoCollectR::makePosteriorPredictivePlot(stanResult = stanResult, responseData=data$responseData, targetCovariateName = "Year", onsetCovariateData = data$onsetCovariateData, durationCovariateData = data$durationCovariateData)
devtools::document()
devtools::document(pkg = "phenoCollectR")
setwd()
getwd()
devtools::install_github("david-j-hearn/phenoCollectR")
library(phenoCollectR)
data(package = "phenoCollectR")
ls()
system.file("data", "Mertensia_virginica.Full.txt", package = "phenoCollectR")
data = preparePhenologyData(dataFile=file, responseVariableName="DOY", onsetCovariateNames=c("Year","Latitude"), durationCovariateNames=c("Year","Latitude"), taxonName="Mertensia_virginica", removeOutliers=TRUE)
file = system.file("data", "Mertensia_virginica.Full.txt", package = "phenoCollectR")
data = preparePhenologyData(dataFile=file, responseVariableName="DOY", onsetCovariateNames=c("Year","Latitude"), durationCovariateNames=c("Year","Latitude"), taxonName="Mertensia_virginica", removeOutliers=TRUE)
runStanPhenology(type="full", responseData = data$responseData, onsetCovariateData = data$onsetCovariateData, durationCovariateData = data$durationCovariateData, partitionDataForPriors = TRUE)
stanResult = runStanPhenology(type="full", responseData = data$responseData, onsetCovariateData = data$onsetCovariateData, durationCovariateData = data$durationCovariateData, partitionDataForPriors = TRUE)
stanSummary = phenoCollectR::summarizePhenologyResults(stanRunResult = stanResult, taxonName = "Mertensia virginica",standardLinearModel = TRUE)
stanSummary
pp = phenoCollectR::makePosteriorPredictivePlot(stanResult = stanSummary, responseData = data$responseData, targetCovariateName = "Year", onsetCovariateData = data$onsetCovariateData, durationCovariateData = data$durationCovariateData)
pp = phenoCollectR::makePosteriorPredictivePlot(stanResult = stanResult, responseData = data$responseData, targetCovariateName = "Year", onsetCovariateData = data$onsetCovariateData, durationCovariateData = data$durationCovariateData)
devtools::install_github("david-j-hearn/phenoCollectR")
library(phenoCollectR)
pp = phenoCollectR::makePosteriorPredictivePlot(stanResult = stanResult, responseData = data$responseData, targetCovariateName = "Year", onsetCovariateData = data$onsetCovariateData, durationCovariateData = data$durationCovariateData)
devtools::install_github("david-j-hearn/phenoCollectR")
phenoCollectR::makePosteriorPredictivePlot
library(phenoCollectR)
pp = phenoCollectR::makePosteriorPredictivePlot(stanResult = stanResult, responseData = data$responseData, targetCovariateName = "Year", onsetCovariateData = data$onsetCovariateData, durationCovariateData = data$durationCovariateData)
q(0)
grid::arrow()
ls()
devtools::install_github("david-j-hearn/phenoCollectR")
devtools::install_github("david-j-hearn/phenoCollectR", force=T)
library(phenoCollectR)
##get the file path
file = system.file("data", "Mertensia_virginica.Full.txt", package = "phenoCollectR")
##get the phenology data
data = preparePhenologyData(dataFile=file, responseVariableName="DOY", onsetCovariateNames=c("Year","Latitude"), durationCovariateNames=c("Year","Latitude"), taxonName="Mertensia_virginica", removeOutliers=TRUE)
##run the Stan sampler
stanResult = runStanPhenology(type="full", responseData = data$responseData, onsetCovariateData = data$onsetCovariateData, durationCovariateData = data$durationCovariateData, partitionDataForPriors = TRUE)
##summarize the Stan run
stanSummary = phenoCollectR::summarizePhenologyResults(stanRunResult = stanResult, taxonName = "Mertensia virginica",standardLinearModel = TRUE)
stanSummary = phenoCollectR::summarizePhenologyResults(stanRunResult = stanResult, taxonName = "Mertensia virginica",standardLinearModel = TRUE)
##make posterior predictive graph
pp = phenoCollectR::makePosteriorPredictivePlot(stanResult = stanResult, responseData = data$responseData, targetCovariateName = "Year", onsetCovariateData = data$onsetCovariateData, durationCovariateData = data$durationCovariateData)
pps
pps
pp
stanSummary = phenoCollectR::summarizePhenologyResults(stanRunResult = stanResult, taxonName = "Mertensia virginica",standardLinearModel = TRUE)
##make posterior predictive graph
pp = phenoCollectR::makePosteriorPredictivePlot(stanResult = stanResult, responseData = data$responseData, targetCovariateName = "Latitude", onsetCovariateData = data$onsetCovariateData, durationCovariateData = data$durationCovariateData)
pp
file = system.file("data", "Primula_meadia.Full.txt", package = "phenoCollectR")
##get the phenology data
data = preparePhenologyData(dataFile=file, responseVariableName="DOY", onsetCovariateNames=c("Year","Latitude"), durationCovariateNames=c("Year","Latitude"), taxonName="Mertensia_virginica", removeOutliers=TRUE)
##run the Stan sampler
stanResult = runStanPhenology(type="full", responseData = data$responseData, onsetCovariateData = data$onsetCovariateData, durationCovariateData = data$durationCovariateData, partitionDataForPriors = TRUE)
##summarize the Stan run
stanSummary = phenoCollectR::summarizePhenologyResults(stanRunResult = stanResult, taxonName = "Mertensia virginica",standardLinearModel = TRUE)
##make posterior predictive graph
pp = phenoCollectR::makePosteriorPredictivePlot(stanResult = stanResult, responseData = data$responseData, targetCovariateName = "Year", onsetCovariateData = data$onsetCovariateData, durationCovariateData = data$durationCovariateData)
pp
file = system.file("data", "Primula_meadia.Full.txt", package = "phenoCollectR")
##get the phenology data
data = preparePhenologyData(dataFile=file, responseVariableName="DOY", onsetCovariateNames=c("Year","Latitude"), durationCovariateNames=c("Year","Latitude"), taxonName="Mertensia_virginica", removeOutliers=TRUE)
##run the Stan sampler
stanResult = runStanPhenology(type="full", responseData = data$responseData, onsetCovariateData = data$onsetCovariateData, durationCovariateData = data$durationCovariateData, partitionDataForPriors = TRUE)
##summarize the Stan run
stanSummary = phenoCollectR::summarizePhenologyResults(stanRunResult = stanResult, taxonName = "Mertensia virginica",standardLinearModel = TRUE)
##make posterior predictive graph
pp = phenoCollectR::makePosteriorPredictivePlot(stanResult = stanResult, responseData = data$responseData, targetCovariateName = "Latitude", onsetCovariateData = data$onsetCovariateData, durationCovariateData = data$durationCovariateData)
pp
file = system.file("data", "Anemone_quinquefolia.Full.txt", package = "phenoCollectR")
##get the phenology data
data = preparePhenologyData(dataFile=file, responseVariableName="DOY", onsetCovariateNames=c("Year","Latitude"), durationCovariateNames=c("Year","Latitude"), taxonName="Mertensia_virginica", removeOutliers=TRUE)
##run the Stan sampler
stanResult = runStanPhenology(type="full", responseData = data$responseData, onsetCovariateData = data$onsetCovariateData, durationCovariateData = data$durationCovariateData, partitionDataForPriors = TRUE)
##summarize the Stan run
stanSummary = phenoCollectR::summarizePhenologyResults(stanRunResult = stanResult, taxonName = "Mertensia virginica",standardLinearModel = TRUE)
##make posterior predictive graph
pp = phenoCollectR::makePosteriorPredictivePlot(stanResult = stanResult, responseData = data$responseData, targetCovariateName = "Year", onsetCovariateData = data$onsetCovariateData, durationCovariateData = data$durationCovariateData)
pp
file = system.file("data", "Anemone_quinquefolia.Full.txt", package = "phenoCollectR")
##get the phenology data
data = preparePhenologyData(dataFile=file, responseVariableName="DOY", onsetCovariateNames=c("Year","Latitude"), durationCovariateNames=c("Year","Latitude","Elevation"), taxonName="Mertensia_virginica", removeOutliers=TRUE)
##run the Stan sampler
stanResult = runStanPhenology(type="full", responseData = data$responseData, onsetCovariateData = data$onsetCovariateData, durationCovariateData = data$durationCovariateData, partitionDataForPriors = TRUE)
file = system.file("data", "Anemone_quinquefolia.Full.txt", package = "phenoCollectR")
##get the phenology data
data = preparePhenologyData(dataFile=file, responseVariableName="DOY", onsetCovariateNames=c("Year","Latitude","Elevation"), durationCovariateNames=c("Year","Latitude","Elevation"), taxonName="Mertensia_virginica", removeOutliers=TRUE)
##run the Stan sampler
stanResult = runStanPhenology(type="full", responseData = data$responseData, onsetCovariateData = data$onsetCovariateData, durationCovariateData = data$durationCovariateData, partitionDataForPriors = TRUE)
##summarize the Stan run
stanSummary = phenoCollectR::summarizePhenologyResults(stanRunResult = stanResult, taxonName = "Mertensia virginica",standardLinearModel = TRUE)
##make posterior predictive graph
pp = phenoCollectR::makePosteriorPredictivePlot(stanResult = stanResult, responseData = data$responseData, targetCovariateName = "Year", onsetCovariateData = data$onsetCovariateData, durationCovariateData = data$durationCovariateData)
pp
file = system.file("data", "Anemone_quinquefolia.Full.txt", package = "phenoCollectR")
##get the phenology data
data = preparePhenologyData(dataFile=file, responseVariableName="DOY", onsetCovariateNames=c("Year","Latitude","Elevation"), durationCovariateNames=c("Year","Latitude","Elevation"), taxonName="Mertensia_virginica", removeOutliers=TRUE)
##run the Stan sampler
stanResult = runStanPhenology(type="full", responseData = data$responseData, onsetCovariateData = data$onsetCovariateData, durationCovariateData = data$durationCovariateData, partitionDataForPriors = TRUE)
##summarize the Stan run
stanSummary = phenoCollectR::summarizePhenologyResults(stanRunResult = stanResult, taxonName = "Mertensia virginica",standardLinearModel = TRUE)
##make posterior predictive graph
pp = phenoCollectR::makePosteriorPredictivePlot(stanResult = stanResult, responseData = data$responseData, targetCovariateName = "Latitude", onsetCovariateData = data$onsetCovariateData, durationCovariateData = data$durationCovariateData)
pp
file = system.file("data", "Sanguinaria_canadensis.Full.txt", package = "phenoCollectR")
##get the phenology data
data = preparePhenologyData(dataFile=file, responseVariableName="DOY", onsetCovariateNames=c("Year","Latitude","Elevation"), durationCovariateNames=c("Year","Latitude","Elevation"), taxonName="Mertensia_virginica", removeOutliers=TRUE)
##run the Stan sampler
stanResult = runStanPhenology(type="full", responseData = data$responseData, onsetCovariateData = data$onsetCovariateData, durationCovariateData = data$durationCovariateData, partitionDataForPriors = TRUE)
##summarize the Stan run
stanSummary = phenoCollectR::summarizePhenologyResults(stanRunResult = stanResult, taxonName = "Mertensia virginica",standardLinearModel = TRUE)
##make posterior predictive graph
pp = phenoCollectR::makePosteriorPredictivePlot(stanResult = stanResult, responseData = data$responseData, targetCovariateName = "Year", onsetCovariateData = data$onsetCovariateData, durationCovariateData = data$durationCovariateData)
pp
pp = phenoCollectR::makePosteriorPredictivePlot(stanResult = stanResult, responseData = data$responseData, targetCovariateName = "Latitude", onsetCovariateData = data$onsetCovariateData, durationCovariateData = data$durationCovariateData)
pp
pp = phenoCollectR::makePosteriorPredictivePlot(stanResult, data$responseData,  "Latitude",  data$onsetCovariateData, data$durationCovariateData)
pp = phenoCollectR::makePosteriorPredictivePlot(stanResult = stanResult, responseData = data$responseData, targetCovariateName = "Elevation", onsetCovariateData = data$onsetCovariateData, durationCovariateData = data$durationCovariateData)
pp
file = system.file("data", "Enemion_biternatum.Full.txt", package = "phenoCollectR")
##get the phenology data
data = preparePhenologyData(dataFile=file, responseVariableName="DOY", onsetCovariateNames=c("Year","Latitude","Elevation"), durationCovariateNames=c("Year","Latitude","Elevation"), taxonName="Mertensia_virginica", removeOutliers=TRUE)
##run the Stan sampler
stanResult = runStanPhenology(type="full", responseData = data$responseData, onsetCovariateData = data$onsetCovariateData, durationCovariateData = data$durationCovariateData, partitionDataForPriors = TRUE)
##summarize the Stan run
stanSummary = phenoCollectR::summarizePhenologyResults(stanRunResult = stanResult, taxonName = "Mertensia virginica",standardLinearModel = TRUE)
##make posterior predictive graph
pp = phenoCollectR::makePosteriorPredictivePlot(stanResult = stanResult, responseData = data$responseData, targetCovariateName = "Year", onsetCovariateData = data$onsetCovariateData, durationCovariateData = data$durationCovariateData)
pp
##make posterior predictive graph
pp = phenoCollectR::makePosteriorPredictivePlot(stanResult = stanResult, responseData = data$responseData, targetCovariateName = "Latitude", onsetCovariateData = data$onsetCovariateData, durationCovariateData = data$durationCovariateData)
pp
##make posterior predictive graph
pp = phenoCollectR::makePosteriorPredictivePlot(stanResult = stanResult, responseData = data$responseData, targetCovariateName = "Elevation", onsetCovariateData = data$onsetCovariateData, durationCovariateData = data$durationCovariateData)
pp
##make posterior predictive graph
pp = phenoCollectR::makePosteriorPredictivePlot(stanResult = stanResult, responseData = data$responseData, targetCovariateName = "Elevation", onsetCovariateData = data$onsetCovariateData, durationCovariateData = data$durationCovariateData, keepSigma = F)
pp
file = system.file("data", "Collinsia_verna.Full.txt", package = "phenoCollectR")
##get the phenology data
data = preparePhenologyData(dataFile=file, responseVariableName="DOY", onsetCovariateNames=c("Year","Latitude","Elevation"), durationCovariateNames=c("Year","Latitude","Elevation"), taxonName="Mertensia_virginica", removeOutliers=TRUE)
##run the Stan sampler
stanResult = runStanPhenology(type="full", responseData = data$responseData, onsetCovariateData = data$onsetCovariateData, durationCovariateData = data$durationCovariateData, partitionDataForPriors = TRUE)
##summarize the Stan run
stanSummary = phenoCollectR::summarizePhenologyResults(stanRunResult = stanResult, taxonName = "Mertensia virginica",standardLinearModel = TRUE)
##make posterior predictive graph
pp = phenoCollectR::makePosteriorPredictivePlot(stanResult = stanResult, responseData = data$responseData, targetCovariateName = "Year", onsetCovariateData = data$onsetCovariateData, durationCovariateData = data$durationCovariateData)
pp
file = system.file("data", "Collinsia_verna.Full.txt", package = "phenoCollectR")
##get the phenology data
data = preparePhenologyData(dataFile=file, responseVariableName="DOY", onsetCovariateNames=c("Year","Latitude","Elevation"), durationCovariateNames=c("Year","Latitude","Elevation"), taxonName="Mertensia_virginica", removeOutliers=TRUE)
##run the Stan sampler
stanResult = runStanPhenology(type="full", responseData = data$responseData, onsetCovariateData = data$onsetCovariateData, durationCovariateData = data$durationCovariateData, partitionDataForPriors = TRUE)
##summarize the Stan run
stanSummary = phenoCollectR::summarizePhenologyResults(stanRunResult = stanResult, taxonName = "Mertensia virginica",standardLinearModel = TRUE)
##make posterior predictive graph
pp = phenoCollectR::makePosteriorPredictivePlot(stanResult = stanResult, responseData = data$responseData, targetCovariateName = "Latitude", onsetCovariateData = data$onsetCovariateData, durationCovariateData = data$durationCovariateData)
pp
pp
data = preparePhenologyData(dataFile=file, responseVariableName="DOY", onsetCovariateNames=c("Year","Latitude","Elevation","SpringMonthlyAverageTemperature"), durationCovariateNames=c("Year","SpringMonthlyAverageTemperature", "Latitude","Elevation"), taxonName="Mertensia_virginica", removeOutliers=TRUE)
data = preparePhenologyData(dataFile=file, responseVariableName="DOY", onsetCovariateNames=c("Year","Latitude","Elevation","SpringMonthlyAverageTemp"), durationCovariateNames=c("Year","SpringMonthlyAverageTemp", "Latitude","Elevation"), taxonName="Mertensia_virginica", removeOutliers=TRUE)
##run the Stan sampler
stanResult = runStanPhenology(type="full", responseData = data$responseData, onsetCovariateData = data$onsetCovariateData, durationCovariateData = data$durationCovariateData, partitionDataForPriors = TRUE)
data = preparePhenologyData(dataFile=file, responseVariableName="DOY", onsetCovariateNames=c("Year","Latitude","Elevation","SpringMonthlyAverageTemp"), durationCovariateNames=c("Year","SpringMonthlyAverageTemp", "Latitude","Elevation"), taxonName="Mertensia_virginica", removeOutliers=TRUE)
##run the Stan sampler
stanResult = runStanPhenology(type="full", responseData = data$responseData, onsetCovariateData = data$onsetCovariateData, durationCovariateData = data$durationCovariateData, partitionDataForPriors = TRUE)
##get the phenology data
data = preparePhenologyData(dataFile=file, responseVariableName="DOY", onsetCovariateNames=c("Year","Latitude","Elevation","SpringMonthlyAverageTemp"), durationCovariateNames=c("Year", "Latitude","Elevation","SpringMonthlyAverageTemp"), taxonName="Mertensia_virginica", removeOutliers=TRUE)
##run the Stan sampler
stanResult = runStanPhenology(type="full", responseData = data$responseData, onsetCovariateData = data$onsetCovariateData, durationCovariateData = data$durationCovariateData, partitionDataForPriors = TRUE)
##summarize the Stan run
stanSummary = phenoCollectR::summarizePhenologyResults(stanRunResult = stanResult, taxonName = "Mertensia virginica",standardLinearModel = TRUE)
##make posterior predictive graph
pp = phenoCollectR::makePosteriorPredictivePlot(stanResult = stanResult, responseData = data$responseData, targetCovariateName = "Year", onsetCovariateData = data$onsetCovariateData, durationCovariateData = data$durationCovariateData)
pp
pp = phenoCollectR::makePosteriorPredictivePlot(stanResult = stanResult, responseData = data$responseData, targetCovariateName = "SpringMonthlyAverageTemp", onsetCovariateData = data$onsetCovariateData, durationCovariateData = data$durationCovariateData)
pp
pp = phenoCollectR::makePosteriorPredictivePlot(stanResult = stanResult, responseData = data$responseData, targetCovariateName = "Latitude", onsetCovariateData = data$onsetCovariateData, durationCovariateData = data$durationCovariateData)
pp
file = system.file("data", "Cardamine_concatenata.Full.txt", package = "phenoCollectR")
##get the phenology data
data = preparePhenologyData(dataFile=file, responseVariableName="DOY", onsetCovariateNames=c("Year","Latitude","Elevation","SpringMonthlyAverageTemp"), durationCovariateNames=c("Year", "Latitude","Elevation","SpringMonthlyAverageTemp"), taxonName="Mertensia_virginica", removeOutliers=TRUE)
##run the Stan sampler
stanResult = runStanPhenology(type="full", responseData = data$responseData, onsetCovariateData = data$onsetCovariateData, durationCovariateData = data$durationCovariateData, partitionDataForPriors = TRUE)
##summarize the Stan run
stanSummary = phenoCollectR::summarizePhenologyResults(stanRunResult = stanResult, taxonName = "Mertensia virginica",standardLinearModel = TRUE)
##make posterior predictive graph
pp = phenoCollectR::makePosteriorPredictivePlot(stanResult = stanResult, responseData = data$responseData, targetCovariateName = "Year", onsetCovariateData = data$onsetCovariateData, durationCovariateData = data$durationCovariateData)
pp
file = system.file("data", "Cardamine_concatenata.Full.txt", package = "phenoCollectR")
##get the phenology data
data = preparePhenologyData(dataFile=file, responseVariableName="DOY", onsetCovariateNames=c("Year","Latitude","Elevation","SpringMonthlyAverageTemp"), durationCovariateNames=c("Year", "Latitude","Elevation","SpringMonthlyAverageTemp"), taxonName="Mertensia_virginica", removeOutliers=TRUE)
##run the Stan sampler
stanResult = runStanPhenology(type="full", responseData = data$responseData, onsetCovariateData = data$onsetCovariateData, durationCovariateData = data$durationCovariateData, partitionDataForPriors = TRUE)
##summarize the Stan run
stanSummary = phenoCollectR::summarizePhenologyResults(stanRunResult = stanResult, taxonName = "Mertensia virginica",standardLinearModel = TRUE)
##make posterior predictive graph
pp = phenoCollectR::makePosteriorPredictivePlot(stanResult = stanResult, responseData = data$responseData, targetCovariateName = "SpringAverageMonthlyTemp", onsetCovariateData = data$onsetCovariateData, durationCovariateData = data$durationCovariateData)
pp
pp = phenoCollectR::makePosteriorPredictivePlot(stanResult = stanResult, responseData = data$responseData, targetCovariateName = "SpringAverageMonthlyTemp", onsetCovariateData = data$onsetCovariateData, durationCovariateData = data$durationCovariateData)
pp = phenoCollectR::makePosteriorPredictivePlot(stanResult = stanResult, responseData = data$responseData, targetCovariateName = "SpringMonthlyAverageTemp", onsetCovariateData = data$onsetCovariateData, durationCovariateData = data$durationCovariateData)
pp
devtools::install_github("david-j-hearn/phenoCollectR")
library(phenoCollectR)
help("preparePhenologyData")
##get the file name with data for the blood root plant
file <- system.file("data", "Sanguinaria_canadensis.Full.txt", package = "phenoCollectR")
##get the phenology data
data <- preparePhenologyData(dataFile=file, responseVariableName="DOY", onsetCovariateNames=c("Year","Latitude","Elevation"), durationCovariateNames=c("Year","Latitude","Elevation"), taxonName="Mertensia_virginica", removeOutliers=TRUE)
##run the Stan sampler
stanResult <- runStanPhenology(type="full", responseData = data$responseData, onsetCovariateData = data$onsetCovariateData, durationCovariateData = data$durationCovariateData, partitionDataForPriors = TRUE)
##summarize the Stan run
stanSummary <- summarizePhenologyResults(stanRunResult = stanResult, taxonName = "Mertensia virginica",standardLinearModel = TRUE)
##make posterior predictive graph
pp <- makePosteriorPredictivePlot(stanResult = stanResult, responseData = data$responseData, targetCovariateName = "Year", onsetCovariateData = data$onsetCovariateData, durationCovariateData = data$durationCovariateData)
print(pp)
pp <- makePosteriorPredictivePlot(stanResult = stanResult, responseData = data$responseData, targetCovariateName = "SpringMonthlyMeanTemp", onsetCovariateData = data$onsetCovariateData, durationCovariateData = data$durationCovariateData)
pp <- makePosteriorPredictivePlot(stanResult = stanResult, responseData = data$responseData, targetCovariateName = "SpringMonthlyAverageTemp", onsetCovariateData = data$onsetCovariateData, durationCovariateData = data$durationCovariateData)
pp <- makePosteriorPredictivePlot(stanResult = stanResult, responseData = data$responseData, targetCovariateName = "Latitude", onsetCovariateData = data$onsetCovariateData, durationCovariateData = data$durationCovariateData)
pp
pp <- makePosteriorPredictivePlot(stanResult = stanResult, responseData = data$responseData, targetCovariateName = "Elevation", onsetCovariateData = data$onsetCovariateData, durationCovariateData = data$durationCovariateData)
pp
pp <- makePosteriorPredictivePlot(stanResult = stanResult, responseData = data$responseData, targetCovariateName = "Latitude", onsetCovariateData = data$onsetCovariateData, durationCovariateData = data$durationCovariateData); pp
setwd("Documents/Projects/phenoCollectR/phenoCollectR/")
library(phenoCollectR)
help("preparePhenologyData")
##run the Stan sampler
stanResult <- runStanPhenology(type="full", responseData = data$responseData, onsetCovariateData = data$onsetCovariateData, durationCovariateData = data$durationCovariateData, partitionDataForPriors = TRUE)
